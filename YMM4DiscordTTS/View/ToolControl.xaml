<UserControl x:Class="YMM4DiscordTTS.View.ToolControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:YMM4DiscordTTS.View"
             xmlns:settings="clr-namespace:YMM4DiscordTTS.Settings"
             xmlns:theme="clr-namespace:YukkuriMovieMaker.Theme;assembly=YukkuriMovieMaker.Plugin"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <CollectionViewSource x:Key="ChannelsByCategory" Source="{Binding TextChannels}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Category.Name" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <CollectionViewSource x:Key="VoiceChannelsByCategory" Source="{Binding VoiceChannels}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Category.Name" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
    </UserControl.Resources>

    <Grid>
        <ScrollViewer VerticalScrollBarVisibility="Auto" Padding="10">
            <StackPanel Orientation="Vertical">

                <GroupBox Header="Discord 接続" Padding="10">
                    <StackPanel>
                        <TextBlock Text="Bot Token:" Margin="0,0,0,5"/>
                        <Grid Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>


                            <TextBox Grid.Column="0"
                                     Text="{Binding Token, UpdateSourceTrigger=PropertyChanged}"
                                     VerticalContentAlignment="Center">
                                <TextBox.Style>
                                    <Style TargetType="TextBox">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPasswordVisible}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>

                            <PasswordBox x:Name="TokenPasswordBox"
                                         Grid.Column="0"
                                         VerticalContentAlignment="Center"
                                         PasswordChanged="TokenPasswordBox_PasswordChanged">
                                <PasswordBox.Style>
                                    <Style TargetType="PasswordBox">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPasswordVisible}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </PasswordBox.Style>
                            </PasswordBox>

                            <ToggleButton Grid.Column="1" Width="24" ToolTip="トークンを表示/非表示" 
                                          IsChecked="{Binding IsPasswordVisible}" 
                                          Background="Transparent">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <Viewbox Stretch="Uniform" Margin="4">
                                                    <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Width="24" Height="24">
                                                        <Path Fill="{DynamicResource {x:Static theme:YMM4Colors.IconBrushKey}}" Data="M12 17.5C8.2 17.5 4.8 15.4 3.2 12H1C2.7 16.4 7 19.5 12 19.5S21.3 16.4 23 12H20.8C19.2 15.4 15.8 17.5 12 17.5Z" />
                                                    </Canvas>
                                                </Viewbox>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border x:Name="border"
                                                            Background="Transparent"
                                                            BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                                                            BorderThickness="1"
                                                            CornerRadius="1">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" />
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsChecked" Value="True" />
                                                                <Condition Property="IsMouseOver" Value="True" />
                                                            </MultiTrigger.Conditions>
                                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                                        </MultiTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True">
                                                <Setter Property="Content">
                                                    <Setter.Value>
                                                        <Viewbox Stretch="Uniform" Margin="4">
                                                            <Canvas xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Width="24" Height="24">
                                                                <Path Fill="{DynamicResource {x:Static theme:YMM4Colors.IconBrushKey}}" Data="M12,9A3,3 0 0,1 15,12A3,3 0 0,1 12,15A3,3 0 0,1 9,12A3,3 0 0,1 12,9M12,4.5C17,4.5 21.27,7.61 23,12C21.27,16.39 17,19.5 12,19.5C7,19.5 2.73,16.39 1,12C2.73,7.61 7,4.5 12,4.5M3.18,12C4.83,15.36 8.24,17.5 12,17.5C15.76,17.5 19.17,15.36 20.82,12C19.17,8.64 15.76,6.5 12,6.5C8.24,6.5 4.83,8.64 3.18,12Z" />
                                                            </Canvas>
                                                        </Viewbox>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                        </Grid>

                        <Button Content="Login" HorizontalAlignment="Left" Width="100" Margin="0,0,0,15" 
                                Command="{Binding LoginCommand}"/>

                        <TextBlock Text="サーバー:" Margin="0,0,0,5"/>
                        <ComboBox ItemsSource="{Binding Guilds}" 
                                  SelectedItem="{Binding SelectedGuild}" 
                                  DisplayMemberPath="Name" 
                                  Margin="0,0,0,10"/>

                        <TextBlock Text="ボイスチャンネル:" Margin="0,0,0,5"/>
                        <ComboBox ItemsSource="{Binding Source={StaticResource VoiceChannelsByCategory}}"
                          SelectedItem="{Binding SelectedVoiceChannel}"
                          DisplayMemberPath="Name"
                          Margin="0,0,0,10">
                            <ComboBox.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock FontWeight="Bold" Background="{DynamicResource {x:Static theme:YMM4Colors.IconBorderBrushKey}}" Padding="5,2" Text="{Binding Name}" />
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                </GroupStyle>
                            </ComboBox.GroupStyle>
                        </ComboBox>

                        <TextBlock Text="テキストチャンネル:" Margin="0,0,0,5"/>
                        <ComboBox ItemsSource="{Binding Source={StaticResource ChannelsByCategory}}"
                          SelectedItem="{Binding SelectedTextChannel}"
                          DisplayMemberPath="Name"
                          Margin="0,0,0,15">
                            <ComboBox.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock FontWeight="Bold" Background="{DynamicResource {x:Static theme:YMM4Colors.IconBorderBrushKey}}" Padding="5,2" Text="{Binding Name}" />
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                </GroupStyle>
                            </ComboBox.GroupStyle>
                        </ComboBox>

                        <StackPanel Orientation="Horizontal">
                            <Button Content="VCに参加" Width="100" Command="{Binding JoinVoiceChannelCommand}"/>
                            <Button Content="VCから退出" Width="100" Margin="10,0,0,0" 
                                    Command="{Binding LeaveVoiceChannelCommand}" 
                                    IsEnabled="{Binding IsConnectedToVoice}"/>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="手動読み上げ" Padding="10">
                    <StackPanel>
                        <TextBlock Text="メッセージ:" Margin="0,0,0,5"/>
                        <TextBox Text="{Binding TextToRead, UpdateSourceTrigger=PropertyChanged}"
                                 Margin="0,0,0,10"
                                 AcceptsReturn="True"
                                 MinHeight="40"
                                 MaxHeight="120"
                                 VerticalScrollBarVisibility="Auto"
                                 PreviewKeyDown="TextBox_PreviewKeyDown">
                            <TextBox.InputBindings>
                                <KeyBinding Modifiers="Ctrl" Key="Enter" Command="{Binding ReadAloudCommand}" />
                            </TextBox.InputBindings>
                        </TextBox>
                        <Button Content="読み上げ" HorizontalAlignment="Left" Width="100" Command="{Binding ReadAloudCommand}"/>
                    </StackPanel>
                </GroupBox>

                <GroupBox Header="読み上げ設定" Padding="0" Margin="0,15,0,0">
                    <StackPanel Margin="5">
                        <settings:TTSSettingsView/>
                    </StackPanel>
                </GroupBox>

            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>